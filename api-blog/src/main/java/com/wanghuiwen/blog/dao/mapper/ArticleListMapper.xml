<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wanghuiwen.blog.dao.ArticleListMapper">
  <resultMap id="BaseResultMap" type="com.wanghuiwen.blog.model.ArticleList">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="article_id" jdbcType="BIGINT" property="articleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="class_id" jdbcType="BIGINT" property="classId" />
    <result column="top" jdbcType="BIT" property="top" />
    <result column="cover_picture" jdbcType="VARCHAR" property="coverPicture" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="digest" jdbcType="VARCHAR" property="digest" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
  </resultMap>
  <select id="selectIndex" parameterType="java.util.Map" resultType="com.wanghuiwen.core.mybatis.ResultMap">
    select *
    from (select * from article_list where status = 1 ) a
           left join (
      select article_id as aid, count(1) likes
      from article_like
      group by article_id) b on (a.article_id = b.aid)
           left join (
      select count(1) comments, article_id as cid
      from article_comment
      group by article_id
    ) c on (a.article_id = c.cid)
    order by top desc, create_time desc
  </select>
</mapper>